@import "../node_modules/bootstrap/dist/css/bootstrap.min.css";

* {
   margin: 0;
   padding: 0;
   box-sizing: border-box;
   font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;

}

html,
body {
   width: 100%;
   height: 100%;
}

a {
   color: black;
   text-decoration: none;
   margin-right: 20px;
}

.App {
   display: flex;
   flex-direction: column;
   min-height: 100vh;
}

.content {
   flex: 1;
}
.home-body {
  padding: 20px 0;
}

.home-body .carousel {
   max-height: 100%;
}

.home-body .carousel .carousel-item {
   height: 100%;
}
.home-body .carousel .carousel-item img {
   width: 100%;
   max-height: 600px;
   object-fit: contain;
   background-color: #f5f5f5; /* Adds background for padding area */
   padding: 20px;
}



.property-content {
   display: flex;
   flex-wrap: wrap;
   justify-content: center;
}

.content-home {
   position: absolute;
   top: 30%;
   left: 5%;
}

.content-home p {
   font-size: 42px;
   font-weight: 800;
   color: rgb(102, 62, 9);
}

.filter-container {
   width: 100%;
   height: 10vh;
   display: flex;
   align-items: center;
   justify-content: center;
   margin-bottom: 10px;
}

.filter-container input,
select {
   border: 1px solid black;
   padding: 10px;
   margin: 10px;
   border-radius: 5px;
}

.column {
   width: 100%;
   display: flex;
   flex-wrap: wrap;
}

.card {
   margin-right: 20px;
   margin-bottom: 15px;
}

.card .card-body .card-title img {
   width: 100%;
   height: 150px;
}

.chat-container {
   display: flex;
   flex-direction: column;
   height: 100%;
}

.chat-container h1 {
   font-size: 22px;
   text-align: center;
   margin-bottom: 20px;
}


.message-window {
   /* flex: 1; */
   overflow-x: auto;
   padding: 10px;
   width: 100%;
   max-height: 200px;
   height: 100px;
   border: 1px solid lightgray;
   border-radius: 5px;
}

.message {
   background-color: #f5f5f5;
   padding: 5px;
   margin-bottom: 10px;
}

.input-container {
   display: flex;
   align-items: center;
   padding: 12px;
}

.input-container textarea {
   width: 25px;
   flex: 1;
   padding: 5px;
   margin-right: 5px;
   border: none;
   border-radius: 5px;
   background-color: rgb(250, 247, 247);
}

.input-container button {
   padding: 5px 10px;
   color: white;
   font-size: 12px;
   border: none;
   width: 40px;
   height: 40px;
   border-radius: 50%;
}

@media screen and (max-width: 480px) {
   .chat-container {
      height: auto;
   }
}
/* === HOME PAGE STYLES (from Home.css) === */

.carousel-item img {
  width: 100%;
  max-height: 90vh; /* allow the full image to show */
  object-fit: contain;
  margin: auto;
  display: block;
  background-color: #f8f9fa;
}


.home-carousel {
   margin: 0 auto;
   padding: 20px;
   max-width: 1200px;
}

.property-content {
   background-color: #f8f9fa;
}

.nav-link {
   font-weight: 500;
   color: #0d6efd;
   text-decoration: none;
}

.nav-link:hover {
   text-decoration: underline;
}


.hero-overlay {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  background: rgba(0, 0, 0, 0.5); /* dark transparent overlay */
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 2rem;
}

.hero-content {
  z-index: 2;
}

.hero-content h1,
.hero-content p {
  text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.8);
}
.navbar {
  position: absolute;
  width: 100%;
  top: 0;
  z-index: 10;
  background: transparent !important;
}

.navbar .nav-link {
  color: white !important;
  font-weight: 600;
}

.navbar .nav-link:hover {
  color: #ffc107 !important;
}
.hero-carousel .carousel-item {
  height: 100vh;
}

.carousel-bg {
  height: 100%;
  background-repeat: no-repeat;
}

.carousel-overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.5); /* dark transparent overlay */
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
  padding: 2rem;
}

.text-shadow {
  text-shadow: 2px 2px 6px rgba(0, 0, 0, 0.8);
}
.property-section {
  background: linear-gradient(to right, #f8f9fa, #e9ecef);
  padding: 60px 20px;
}

.property-heading {
  font-size: 2.5rem;
  font-weight: 700;
  color: #333;
}

.property-heading .highlight {
  color: #0d6efd;
}

.property-subtext {
  font-size: 1.1rem;
  color: #555;
}

.register-btn {
  font-weight: 600;
  border-radius: 30px;
  padding: 10px 20px;
  transition: all 0.3s ease;
}

.register-btn:hover {
  background-color: #0d6efd;
  color: white;
  border-color: #0d6efd;
}
.register-container {
  min-height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  background: url('D:\fs\code\frontend\src\images\p4.jpg') no-repeat center center;
  background-size: cover;
  position: relative;
}

/* Optional: Dark overlay over background for readability */
.register-container::before {
  content: '';
  position: absolute;
  top: 0; left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.4); /* adjust darkness */
  z-index: 1;
}

.register-card {
  position: relative;
  z-index: 2;
  background-color: rgba(255, 255, 255, 0.95); /* semi-transparent white card */
  border-radius: 12px;
  padding: 30px;
  width: 100%;
  max-width: 400px;
  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
  animation: fadeIn 0.6s ease;
}
.register-container input,
.register-container .MuiInputBase-root {
  background: rgba(255, 255, 255, 0.08) !important;
  border: 1px solid rgba(255, 255, 255, 0.4);
  color: white !important;
  border-radius: 10px;
  transition: all 0.3s ease;
}

.register-container input:focus,
.register-container .Mui-focused .MuiOutlinedInput-notchedOutline {
  border-color: #90caf9 !important;
  box-shadow: 0 0 8px rgba(144, 202, 249, 0.6);
}

.register-container .MuiInputLabel-root {
  color: rgba(255, 255, 255, 0.8);
}

.register-container .MuiInputBase-root.MuiOutlinedInput-root:hover .MuiOutlinedInput-notchedOutline {
  border-color: rgba(255, 255, 255, 0.7);
}
.MuiTab-root {
  cursor: pointer !important;
}





/* {allProperties.some((app) => (app.jobInfo._id === property._id) && (app.status === 'applied' || app.status === 'rejected' || app.status === 'selected')) ? (
                              <p style={{ float: 'right', color: 'grey' }} variant="warning" disabled>
                                 Already Applied
                              </p>
                           ) : userLoggedIn ? (
                              <Button
                                 style={{ float: 'right' }}
                                 variant="outline-warning"
                                 onClick={() => setSelectedJobId(property._id)}
                              >
                                 Apply Now
                              </Button>
                           ) : (
                              <Button style={{ float: 'right' }} variant="outline-warning">
                                 <Link to={'/login'}>Buy Now</Link>
                              </Button>
                           )} */
/* <Modal
                              centered
                              open={selectedJobId === property._id}
                              onOk={() => setSelectedJobId(null)}
                              onCancel={() => setSelectedJobId(null)}
                              width={1000}
                           >
                              <Form onFinish={() => handleSubmit(property._id)} className='m-3'>
                                 <h3>Job Description and Skills</h3><hr />
                                 <div className="d-flex flex-column mt-0">
                                    <h5>Descrption:</h5><p>{property.jobDescription}</p><br />
                                    <h5>Skills:</h5><p>{property.skills}</p><br />
                                 </div>
                                 <hr style={{ height: 3, background: 'black' }} />
                                 <h3>Enter Your Details for the Application</h3><hr />
                                 <h5>Personal Details:</h5>
                                 <Row gutter={20}>
                                    <Col xs={24} md={12} lg={8}>
                                       <Form.Item label="Full Name" required>
                                          <Input name='name' value={details.name} onChange={handleChange} placeholder='Enter name' />
                                       </Form.Item>
                                    </Col>
                                    <Col xs={24} md={12} lg={8}>
                                       <Form.Item label="Phone" required>
                                          <Input name='phone' value={details.phone} onChange={handleChange} type='number' placeholder='Your phone' />
                                       </Form.Item>
                                    </Col>
                                    <Col xs={24} md={12} lg={8}>
                                       <Form.Item label="Email" required>
                                          <Input name='email' value={details.email} onChange={handleChange} type='email' placeholder='Your email' />
                                       </Form.Item>
                                    </Col>
                                    <Col xs={24} md={12} lg={8}>
                                       <Form.Item label="Address" required>
                                          <Input name='address' value={details.address} onChange={handleChange} type='text' placeholder='Your address' />
                                       </Form.Item>
                                    </Col>
                                 </Row>
                                 <h5>Highest Educational Details:</h5>
                                 <Row gutter={20}>
                                    <Col xs={24} md={12} lg={8}>
                                       <Form.Item label="University Name" required>
                                          <Input name='universityName' value={details.universityName} onChange={handleChange} type='text' placeholder='Your university name' />
                                       </Form.Item>
                                    </Col>
                                    <Col xs={24} md={12} lg={8}>
                                       <Form.Item label="Highest Degree" required>
                                          <Input name='degree' value={details.degree} onChange={handleChange} type='text' placeholder='Your highest degree' />
                                       </Form.Item>
                                    </Col>
                                    <Col xs={24} md={12} lg={8}>
                                       <Form.Item label="Experience" required>
                                          <Input name='experience' value={details.experience} onChange={handleChange} type='number' placeholder='Your experience' />
                                       </Form.Item>
                                    </Col>
                                 </Row>
                                 <h5>Resume(only in Pdf Format):</h5>
                                 <Row gutter={20}>
                                    <Col xs={24} md={12} lg={8}>
                                       <Form.Item label="Resume" required>
                                          <Input name='resume' accept="application/pdf" onChange={handleDocumentChange} type='file' />
                                       </Form.Item>
                                    </Col>
                                    <br />
                                    <Form.Item>
                                       <Button type='submit' variant='outline-warning'>
                                          Submit
                                       </Button>
                                    </Form.Item>
                                 </Row>
                              </Form>
                           </Modal> */